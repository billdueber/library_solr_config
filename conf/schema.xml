<?xml version="1.0" encoding="UTF-8" ?>


<!DOCTYPE schema [

    <!-- basic, primative types (int, float, string, etc.) -->
    <!ENTITY primative_types SYSTEM "schema/primative_types.xml">

    <!-- Changes at the character level -->
    <!ENTITY pre_tokenization_character_substitution '
      <charFilter class="solr.MappingCharFilterFactory" mapping="character_and_symbol_substitutions.txt"/>
    '>
    <!ENTITY normalize_numeric_digits '
      <filter class="solr.DecimalDigitFilterFactory"/>
    '>


    <!-- Ditch stuff -->

    <!ENTITY trim_leading_and_trailing_whitespace '
      <filter class="solr.TrimFilterFactory"/>
    '>

    <!ENTITY remove_all_numbers '
      <filter class="solr.PatternReplaceFilterFactory" pattern="[\p{N}]" replacement="" replace="all"/>
    '>

    <!ENTITY remove_all_non_numbers '
      <filter class="solr.PatternReplaceFilterFactory" pattern="[^\p{N}]" replacement="" replace="all"/>
    '>

    <!ENTITY remove_all_non_letters '
      <filter class="solr.PatternReplaceFilterFactory" pattern="[^\p{L}]" replacement="" replace="all"/>
    '>

    <!ENTITY remove_all_punctuation '
      <filter class="solr.PatternReplaceFilterFactory" pattern="[\p{P}]" replacement="" replace="all"/>
    '>

    <!-- stemming -->
    <!ENTITY kstemmer '
        <filter class="solr.StemmerOverrideFilterFactory" dictionary="schema/stemming/stemdict.tsv" />
        <filter class="solr.KStemFilterFactory"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
    '>

    <!-- (De)duplication and Synonyms  -->


    <!ENTITY overlay_token_copies_for_later_processing '
      <filter class="solr.KeywordRepeatFilterFactory"/>
    '>


    <!ENTITY remove_duplicates_at_same_position '
      <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
    '>

    <!ENTITY expand_synonyms '
        <filter class="solr.SynonymFilterFactory" synonyms="schema/synonyms" ignoreCase="true" expand="true"/>
    '>

    <!-- Dealing with non-ASCII stuff -->

    <!ENTITY try_to_deal_with_cjk '
      <filter class="solr.CJKWidthFilterFactory"/>
      <filter class="solr.CJKBigramFilterFactory"
        han="true" hiragana="true  "
        katakana="false" hangul="false"
        outputUnigrams="false"
      />
    '>

    <!ENTITY pre_tokenization_case_folding '
      <charFilter class="solr.ICUNormalizer2CharFilterFactory"/>
    '>

    <!ENTITY icu_case_folding '
      <filter class="solr.ICUFoldingFilterFactory"/>
    '>

    <!-- Tokenizing -->
    <!ENTITY tokenize_with_icu '
      <tokenizer class="solr.ICUTokenizerFactory"/>
    '>

    <!ENTITY tokenize_on_slash '
      <tokenizer class="solr.PathHierarchyTokenizerFactory" delimiter="/"/>
    '>

    <!ENTITY tokenize_into_one_big_token '
      <tokenizer class="solr.KeywordTokenizerFactory"/>
    '>





]>


<schema name="library_solr_config" version="1.6">
  <!-- attribute "name" is the name of this schema and is only used for display purposes.
       version="x.y" is Solr's version number for the schema syntax and
       semantics.  It should not normally be changed by applications.

       1.0: multiValued attribute did not exist, all fields are multiValued
            by nature
       1.1: multiValued attribute introduced, false by default
       1.2: omitTermFreqAndPositions attribute introduced, true by default
            except for text fields.
       1.3: removed optional field compress feature
       1.4: autoGeneratePhraseQueries attribute introduced to drive QueryParser
            behavior when a single string produces multiple tokens.  Defaults
            to off for version >= 1.4
       1.5: omitNorms defaults to true for primitive field types
            (int, float, boolean, string...)
       1.6: useDocValuesAsStored defaults to true.
  -->


  <!-- Load up the primative field types -->
  &primative_types;



  <!-- Valid attributes for fields:
    name: mandatory - the name for the field
    type: mandatory - the name of a field type from the
      <types> fieldType section
    indexed: true if this field should be indexed (searchable or sortable)
    stored: true if this field should be retrievable
    docValues: true if this field should have doc values. Doc values are
      useful for faceting, grouping, sorting and function queries. Although not
      required, doc values will make the index faster to load, more
      NRT-friendly and more memory-efficient. They however come with some
      limitations: they are currently only supported by StrField, UUIDField
      and all Trie*Fields, and depending on the field type, they might
      require the field to be single-valued, be required or have a default
      value (check the documentation of the field type you're interested in
      for more information)
    multiValued: true if this field may contain multiple values per document
    omitNorms: (expert) set to true to omit the norms associated with
      this field (this disables length normalization and index-time
      boosting for the field, and saves some memory).  Only full-text
      fields or fields that need an index-time boost need norms.
      Norms are omitted for primitive (non-analyzed) types by default.
    termVectors: [false] set to true to store the term vector for a
      given field.
      When using MoreLikeThis, fields used for similarity should be
      stored for best performance.
    termPositions: Store position information with the term vector.
      This will increase storage costs.
    termOffsets: Store offset information with the term vector. This
      will increase storage costs.
    required: The field is required.  It will throw an error if the
      value does not exist
    default: a value that should be used if no value is specified
      when adding a document.
  -->


  <similarity class="org.apache.lucene.search.similarities.BM25Similarity"/>


  <!-- If you remove this field, you must _also_ disable the update log in solrconfig.xml
     or Solr won't start. _version_ and update log are required for SolrCloud
  -->
  <field name="_version_" type="long" indexed="true" stored="false"
         multiValued="false"/>

  <!-- points to the root document of a block of nested documents. Required for nested
     document support, may be removed otherwise
  -->
  <field name="_root_" type="string" indexed="true" stored="false"
         docValues="false"/>

  <!-- Only remove the "id" field if you have a very good reason to. While not strictly
    required, it is highly recommended. A <uniqueKey> is present in almost all Solr
    installations. See the <uniqueKey> declaration below where <uniqueKey> is set to "id".
    Do NOT change the type and apply index-time analysis to the <uniqueKey> as it will likely
    make routing in SolrCloud and document replacement in general fail. Limited _query_ time
    analysis is possible as long as the indexing process is guaranteed to index the term
    in a compatible way. Any analysis applied to the <uniqueKey> should _not_ produce multiple
    tokens
  -->
  <field name="id" type="string" indexed="true" stored="true" required="true"
         multiValued="false"/>


  <!-- Field to use to determine and enforce document uniqueness.
       Unless this field is marked with required="false", it will be a required field
    -->
  <uniqueKey>id</uniqueKey>


</schema>
